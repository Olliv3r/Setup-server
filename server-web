#!/usr/bin/env bash
#
# server-web - Gerencia servidor web no linux termux
# Obs.: Usa o apachectl e httpd como base para o gerenciamento
#       dos serviços
#
# Site      : http://programadorboard.epizy.com/autor
# Autor     : Oliver Silva <programadorboard@gmail.com>
# Munutençâo: Oliver Silva <programadorboard@gmail.com>
#
# ----------------------------------------------------
# Este programa recebe como parâmetro uma opção e ativa
# uma ação: mostrar status, ativar ou desativar serviço
# e retornando o resultado na saída padrão (STDOUT).
#
# Exemplo:
#
#   $ ./server-web --version
#   server-web versão 1.4
#
#   $ ./server-web --start
#   [*] Servidor Web iniciando...OK
#
#   $ ./server-web --status
#   [+] Apache OK
#   [+] MariaDB Ok
#
#   $ ./server-web --stop
#   [+] Servidor Web encerrando...OK
#
#   $ ./server-web --start --verbose
#   [*] Servidor Web iniciando...OK
#   [+] Htdocs padrão: http://localhost:8080
#   [+] Htdocs redirecionado: https://localhost:8443
#   [+] PhpMyAdmin: https://localhost:8443/phpmyadmin
#
#   $ ./server-web --apache-start --verbose
#   [+] Iniciando Apache...OK
#   [+] Htdocs padrão: http://localhost:8080
#   [+] Htdocs redirecionado: https://localhost:8443
#
#
# Histórico:
#
# v1.0 2022-11-10, Oliver Silva:
#     - Versão inicial iniciando ou encerrando servidor web
# v1.1 2023-01-05, Oliver Silva:
#     - Adicionada verificação de status de serviços ativos ou inativos
# v1.2 2022-02-02, Oliver Silva:
#     - Adicionada verificação de requisitos
# v1.3 2023-02-01, Oliver Silva:
#     - Adicionada funçôes para iniciar, reiniciar e parar o servidor apache
# v1.4 2023-02-03, Oliver Silva:
#     - Adicionada suporte ao modo verbose
#
#
# Licença: MIT License
#
# Versão 1: Adicionada suporte as opçôes --start e --stop
#           para iniciar ou encerrar serviços apache,mysqld_safe e mariadb
#
# Versão 1.1: Adicionada suporte a opção --status para
#           verificar estado de serviços
#
# Versão 1.2: Adicionada suporte a verificação de requisitos
# Versão 1.3: Adicionada suporte as opçôes --apache-start
#	      apache-stop e apache-restart
# Versão 1.4: Adicionada suporte a opção --verbose
#

### VARIÁVEIS ###

# Chaves de ativação das funcionalidades
c_modo_uso=0		# Chave desligada
c_versao=0		# Chave desligada
c_service_status=0	# Chave desligada
c_service_start=0	# Chave desligada
c_service_stop=0	# Chave desligada
c_apache_start=0  	# Chave desligada
c_apache_stop=0		# Chave desligada
c_apache_restart=0	# Chave desligada
c_verbose=0		# Chave desligada

# Processos
apache=$(ps -e | grep -o "httpd")
mysqld_safe=$(ps -e | grep -o "mysqld_safe")
mariadb=$(ps -e | grep -o "mariadbd")

list_req=("mysql" "mariadb")

# Ajuda
ajuda_modo_uso="Modo de uso: $(basename "$0") [OPÇÃO]
Opçôes:
    --help	      Mostra esta tela de ajuda e sai
    --version	      Mostra a versão mais recente do programa
    --status	      Verifica status dos serviços
    --start	      Inicia serviços Apache e MariaDB
    --stop            Encerra serviços Apache e MariaDB
    --apache-start    Inicia o servidor Apache
    --apache-stop     Encerra o servidor Apache
    --apache-restart  Reinicia o servidor Apache
    --verbose 	      Mostra informaçôes para acessar os serviços
"

### FUNCIONALIDADES ###

# Banner
banner() {
echo -e "\e[31;1m
███─███─████─█─█─███─████─────█───█─███─████─
█───█───█──█─█─█─█───█──█─────█───█─█───█──██
███─███─████─█─█─███─████─███─█─█─█─███─████─
──█─█───█─█──███─█───█─█──────█████─█───█──██
███─███─█─█───█──███─█─█───────█─█──███─████─
\n
\e[32;2;3m$(mostrar_versao | tr A-Z a-z)\e[0m
"
}

# Checa a exitência de vários programas
check_program_all() {
    local dir=$PREFIX/bin
    local total=0

    for program in $dir/$1* ; do
        program=$(basename "$program")
        total=$((total +1))
    done

    if [ $total -eq 1 ] ; then
      	if [ "$1" != "mysql" -o "$1" != "mariadb" ] ; then
	    echo -e "\e[33;1m[!] $1 não está instalado\e[0m"
	    exit 1
	fi
    fi
}

# Checa a existência de apenas um programa
check_program_one() {
    local dir=$PREFIX/bin

    if [ ! -f $dir/$1 ] ; then
	echo -e "\e[33;1m[!] $1 não está instalado\e[0m"
	exit 1
    fi
}

check_req() {
    check_program_all "mysql"
    check_program_all "mariadb"
    check_program_one "apachectl"
    check_program_one "httpd"
}

# Extrai a versão diretamente do cabeçalho
mostrar_versao() {
    echo -n "$(basename "$0")"
    grep "^# Versão" "$0" | tail -1 | cut -d : -f 1 | tr -d \# | tr A-Z a-z
}

# Função para iniciar ou encerrar o servidor apache
apache() {
    if [ -n "$2" ] ; then
        printf "\r\e[34m[*] $2 Apache...\e[0m"
        apachectl -k "$1" > /dev/null 3>&2
        printf "\r\e[34m[+] $2 Apache...OK\n\e[0m"
    fi

    if [ -z "$2" ] ; then
        apachectl -k "$1" > /dev/null 3>&2
    fi
}

# Função para iniciar o serviço MariaDB
mysql_start() {
    if [ -n "$1" ] ; then
        printf "\r\e[34m[*] $1 MariaDB...\e[0m"
        mysqld_safe -u root > /dev/null 3>&2 &
        printf "\r\e[34m[+] $1 MariaDB...OK\n\e[0m"
    fi

    if [ -z "$1" ] ; then
        mysqld_safe -u root > /dev/null 3>&2 &
    fi
}

# Função para encerrar o serviço MariaDB
mysql_stop() {
    pkill mariadb > /dev/null 3>&2
}

# Informaçôes de acesso ao host
apache_verbose() {
    echo -e "\e[34m[\e[32;1m+\e[0m\e[34m] Htdocs padrão: \e[32;2;4mhttp://localhost:8080\e[0m"
    sleep 0.1
    echo -e "\e[34m[\e[32;1m+\e[0m\e[34m] Htdocs redirecionado: \e[32;2;4mhttps://localhost:8443\e[0m"
}
phpmyadmin_verbose() {
    echo -e "\e[34m[\e[32;1m+\e[0m\e[34m] PhpMyAdmin: \e[32;2;4mhttps://localhost:8443/phpmyadmin\e[0m"
}

# Inicia servidor web
start() {
    if [ -n "$apache" -a -n "$mysqld_safe" -a -n "$mariadb" ] ; then
	echo -e "\e[34m[\e[33;1m!\e[0m\e[34m] Servidor Web ja está rodando\e[0m"
        status "\e[33;1m!\e[0m"
    fi

    if [ -n "$apache" -a -z "$mysqld_safe" -a -z "$mariadb" ] ; then
	apache "restart" "Reiniciando"
	mysql_start "Iniciando"
    fi

    if [ -z "$apache" -a -n "$mysqld_safe" -a -n "$mariadb" ] ; then
	apache "start" "Iniciando"
	mysql_stop > /dev/null 3>&2
	mysql_start "Reiniciando"
    fi

    if [ -z "$apache" -a -z "$mysqld_safe" -a -z "$mariadb" ] ; then
        printf "\r\e[34m[*] Servidor Web iniciando...\e[0m"
        apache "start"
        mysql_start
        printf "\r\e[34m[*] Servidor Web iniciando...OK\e[0m\n"
    fi
}

# Encerra servidor web
stop() {
    if [ -n "$apache" -a -n "$mysqld_safe" -a -n "$mariadb" ] ; then
	printf "\r\e[34m[*] Servidor Web encerrando...\e[0m"
	apache "stop"
	mysql_stop
	printf "\r\e[34m[+] Servidor Web encerrando...OK\n\e[0m"
    fi

    if [ -n "$apache" -a -z "$mysqld_safe" -a -z "$mariadb" ] ; then
	printf "\r\e[34m[\e[33;1m!\e[0m\e[34m] MariaDB ja está encerrado\n\e[0m"
	printf "\r\e[34m[*] Apache encerrando...\e[0m"
	apache "stop"
	printf "\r\e[34m[+] Apache encerrando...OK\n\e[0m"
    fi

    if [ -z "$apache" -a -n "$mysqld_safe" -a -n "$mariadb" ] ; then
	echo -e "\e[34m[\e[33;1m!\e[0m\e[34m] Apache ja está encerrado\e[0m"
	printf "\r\e[34m[*] MariaDB encerrando...\e[0m"
	mysql_stop
	printf "\r\e[34m[+] MariaDB encerrando...OK\n\e[0m"
    fi

    if [ -z "$apache" -a -z "$mysqld_safe" -a -z "$mariadb" ] ; then
	echo -e "\e[34m[\e[33;1m!\e[0m\e[34m] Servidor Web ja está parado\e[0m"
        status "\e[33;1m!\e[0m"
    fi
}

# Mostra status dos serviços httpd, mysqld e mariadb
status() {
    if [ -n "$apache" -a -n "$mysqld_safe" -a -n "$mariadb" ] ; then
        echo -e "\e[34m[\e[33;1m$1\e[34m] Apache \e[32;1mOK\e[0m"
	echo -e "\e[34m[\e[33;1m$1\e[34m] MariaDB \e[32;1mOk\e[0m"

    elif [ -n "$apache" -a -z "$mysqld_safe" -a -z "$mariadb" ] ; then
	echo -e "\e[34m[\e[33;1m$1\e[34m] Apache \e[32;1mOK\e[0m"
	echo -e "\e[34m[\e[33;1m$1\e[34m] MariaDB \e[31;1mNO\e[0m"

    elif [ -z "$apache" -a -n "$mysqld_safe" -a -n "$mariadb" ] ; then
	echo -e "\e[34m[\e[33;1m$1\e[34m] Apache \e[31;1mNO\e[0m"
	echo -e "\e[34m[\e[33;1m$1\e[34m] MariaDB \e[32;1mOK\e[0m"

    else
	echo -e "\e[34m[\e[33;1m$1\e[34m] Apache \e[31;1mNO\e[0m"
	echo -e "\e[34m[\e[33;1m$1\e[34m] MariaDB \e[31;1mNO\e[0m"
    fi
}

# Inicia o servidor apache
apache_start() {
    if [ -n "$apache" ] ; then
	echo -e "\e[34m[\e[33;1m!\e[0m\e[34m] Apache ja está rodando\e[0m"
    else
        apache "start" "Iniciando"
    fi
}

# Encerra o servidor apache
apache_stop() {
    if [ -z "$apache" ] ; then
	echo -e "\e[34m[\e[33;1m!\e[0m\e[34m] Apache ja está parado\e[0m"
    else
        apache "stop" "Encerrando"
    fi
}

# Reinicia o servidor apache
apache_restart() {
    apache "restart" "Reiniciando"
}

### TRATAMENTO DAS OPÇÔES

test -n "$1" && check_req
test -z "$1" && banner && echo -e "\n\e[0m[\e[33m!\e[0m] Parâmetro necessário, tente --help\e[0m" && exit 1

# Tratando opçôes
while test -n "$1" ; do
    case "$1" in
	--help) c_modo_uso=1;;
	--version) c_versao=1;;
	--status) c_service_status=1;;
	--start) c_service_start=1;;
	--stop) c_service_stop=1;;
        --apache-start) c_apache_start=1;;
	--apache-stop) c_apache_stop=1;;
        --apache-restart) c_apache_restart=1;;
	--verbose) c_verbose=1;;
	*)
	banner
	echo -e "\e[0m[\e[33m!\e[0m] Opção inválida: tente $(basename "$0") --help";;
    esac
    shift
done

### EXECUÇÃO ###

# Verificando chaves se estão ativas
if [ $c_modo_uso -eq 1 ] ; then
    echo -e "$ajuda_modo_uso" && exit 0

elif [ $c_versao -eq 1 ] ; then
    mostrar_versao && exit 0

elif [ $c_service_status -eq 1 ] ; then
    status "+\e[0m" && exit 0

elif [ $c_service_start -eq 1 -a $c_verbose -eq 0 ] ; then
    start && exit 0

elif [ $c_service_start -eq 1 -a $c_verbose -eq 1 ] ; then
    start
    apache_verbose
    phpmyadmin_verbose
    exit 0

elif [ $c_service_stop -eq 1 ] ; then
    stop && exit 0

elif [ $c_apache_start -eq 1 -a $c_verbose -eq 1 ] ; then
    apache_start
    apache_verbose
    exit 0
    
elif [ $c_apache_start -eq 1 -a $c_verbose -eq 0 ] ; then
    apache_start
    exit 0

elif [ $c_apache_stop -eq 1 ] ; then
    apache_stop
    exit 0

elif [ $c_apache_restart -eq 1 ] ; then
    apache_restart
    exit 0

else
    echo "Erro ao processar comando!" && exit 1
fi
