#!/usr/bin/env bash
# setup-server - Configura servidor web automaticamente
# Obs.: Usa arquivos do diretório apache como base
#
# Site      : http://programadorboard.epizy.com/autor
# Autor     : Oliver Silva <programadorboard@gmail.com>
# Munutençâo: Oliver Silva <programadorboard@gmail.com>
#
# ----------------------------------------------------
# Este programa configura um servidor web de forma automática e retornando o resultado na saída padrão (STDOUT).
#
# Exemplo:
#
#   $ ./setup-server
#   [+] Instalando pacotes...OK
#   [+] Configurando o Apache...OK
#   [+] Configurando usuário MySQL...OK
#   [+] Configurando gerenciador...OK
#   [+] Servidor Web configurado...OK
#   [?] Use o 'server-web' para gerenciar (opcional)
#   [?] Informaçôes de acesso ao phpmyadmin: 'root' & 'toor'
#   [!] Bugs, relate em telegram https://t.me/tiooliver_sh
#
# Histórico:
#
# v1.0 2022-11-28, Oliver Silva:
#     - Versão inicial configuração do servidor web
#     - Adicionado instalação do gerenciador de serviços
#     apache e mysqld_safe
# 
# Licença: MIT License
#
# Versão 1.0: Instalação, configuração do servidor web e gerenciador server-web
#
#


text_proc=(
	"Instalando pacotes"
	"Configurando o Apache"
	"Configurando usuário MySQL"
	"Configurando gerenciador"
)

banner() {
echo -e "\n\e[31m███─███─███─█─█─████────███─███─████─█─█─███─████
█───█────█──█─█─█──█────█───█───█──█─█─█─█───█──█
███─███──█──█─█─████────███─███─████─█─█─███─████
──█─█────█──█─█─█─────────█─█───█─█──███─█───█─█─
███─███──█──███─█───────███─███─█─█───█──███─█─█\e[0m
\n\e[32;2m$(version | tr A-Z a-z)\e[0m\n"
}

version() {
    echo -n "$(basename "$0")"
    grep "^# Versão" "$0" | tail -1 | cut -d : -f 1 | tr -d \#
}

animation() {
    local delay=0.25
    local pid=$!
    spinner=('\' '/' '-' '\' '/' '-')

    while [ $(ps a | awk '{print $1}' | grep $pid) ] ; do
	for i in ${spinner[@]}; do
	    tput civis
	    printf "\r\e[34m[*] $1...${i}"
	    sleep $delay
	    printf "\b\b\b\b\b\b\b\b";
        done
    done

    tput cnorm
    printf "\b\b\b\b\b\b"
    printf "\r\e[34m[+] $1...\e[32;2mOK\e[0m\n"
}

install_req() {
    apt update -y > /dev/null 2>&1
    apt install apache2 openssl openssl-tool php php-apache phpmyadmin mariadb -y > /dev/null 2>&1
}

configure_apache() {
    if [ -d apache -a -d apache/extra -a -f apache/extra/httpd.conf ] ; then
        cp apache/extra/httpd.conf $PREFIX/etc/apache2
    fi

    if [ -d apache -a -d apache/ssl -a -f apache/ssl/cert.crt -a -f apache/ssl/cert.key ] ; then
	if [ ! -d $PREFIX/etc/apache2/ssl ] ; then
	    mkdir $PREFIX/etc/apache2/ssl
	    chmod 700 $PREFIX/etc/apache2/ssl
	    cp apache/ssl/cert.* $PREFIX/etc/apache2/ssl/
        else
	
	    rm $PREFIX/etc/apache2/ssl -rf
	    mkdir $PREFIX/etc/apache2/ssl
	    chmod 700 $PREFIX/etc/apache2/ssl
	    cp apache/ssl/cert.* $PREFIX/etc/apache2/ssl/
	fi
    fi

    if [ -d apache -a -d apache/extra -a -f apache/extra/httpd-ssl.conf -a apache/extra/httpd-vhosts.conf ] ; then
	cp apache/extra/httpd-ssl.conf $PREFIX/etc/apache2/extra
	cp apache/extra/httpd-vhosts.conf $PREFIX/etc/apache2/extra
    fi

    if [ -d apache -a -d apache/phpmyadmin -a -f apache/phpmyadmin/config.inc.php ] ; then
	cp apache/phpmyadmin/config.inc.php $PREFIX/etc/phpmyadmin/config.inc.php
    fi

    touch $PREFIX/etc/apache2/extra/php_module.conf
    echo "<?php phpinfo(); ?>" > $PREFIX/share/apache2/default-site/htdocs/index.php
    sleep 1
}

configure_mysql() {
    pkill mariadb
    mysqld_safe -u root 1> /dev/null &
    sleep 2

    mysql -u root -D mysql -e "set password for 'root'@'localhost' = password('toor');"
    mysql -u root -D mysql -e "flush privileges;"
    pkill mariadb
}

configure_manager() {
    source <(curl -fsSL https://raw.githubusercontent.com/Olliv3r/Server-web/main/setup)
    sleep 2
    cp Server-web/server-web .

    [ -d ~/Setup-server/Server-web ] && rm -rf ~/Setup-server/Server-web
}

banner_usage() {
    echo -e "\e[34m[+] Servidor Web configurado...\e[32;2mOK\e[0m"
    echo -e "\e[34m[?] Use o '\e[32;2mserver-web\e[0m\e[34m' para gerenciar (opcional)\e[0m"
    echo -e "\e[34m[?] Informaçôes de acesso ao phpmyadmin: '\e[32;2mroot\e[0m\e[34m' & '\e[32;2mtoor'\e[0m"
    echo -e "\e[34m[!] Bugs, relate em telegram \e[33;2;3mhttps://t.me/tiooliver_sh\e[0m"

    echo -e "\e[34m[!] Saindo do termux, entre novamente e aproveite\e[0m"
    sleep 1

    pid=$(ps -e | cut -c1-6 | tr -d " A-Z")
    for p in $pid ; do
    kill -9 $p
    done
}

apt upgrade -y && apt install ncurses-utils curl -y ; clear
banner
install_req &> /dev/null & animation "${text_proc[0]}"
sleep 1
configure_apache &> /dev/null & animation "${text_proc[1]}"
sleep 1
configure_mysql &> /dev/null & animation "${text_proc[2]}"
sleep 1
configure_manager &> /dev/null & animation "${text_proc[3]}"
sleep 1
banner_usage
